# 看某个点最邻近的一群K个点是那个分类, 就把这个点分为此类
# 计算未知点与所有已知点的距离, 选取K个, 进行多数投票确定未知点的分类
# 懒惰学习, 不提前建立模型, 根据现有已知实时计算

# 电影名  打斗次数    接吻次数    类别
# A       3           104       爱情
# B       2           100       爱情
# C       1           81        爱情
# D       101         10        爱情
# E       99          5         动作
# F       98          2         动作
# G       18          90        未知
# 求G点分类

import numpy as np

def distance(x1, y1, x2, y2):
    d = np.sqrt((x1-x2)**2 + (y1-y2)**2)
    return d

A = distance(18, 90, 3, 104)
B = distance(18, 90, 2, 100)
C = distance(18, 90, 1, 81)
D = distance(18, 90, 101, 10)
E = distance(18, 90, 99, 5)
F = distance(18, 90, 98, 2)

print(A,B,C,D,E)

# 20.518284528683193 18.867962264113206 19.235384061671343 115.27792503337315 117.41379816699569

# 若取K=3, 则最近的ABC三点都是爱情, 故G也是爱情

# 当数据不平衡的时候容易失真
# 使用加权距离， 以距离倒数1/d作为各点的权重，再相加